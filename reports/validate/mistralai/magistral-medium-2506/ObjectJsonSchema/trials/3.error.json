{
  "type": "error",
  "error": {
    "status": 400,
    "headers": {
      "access-control-allow-origin": "*",
      "cf-ray": "94e12a6c68fe0d8b-MAN",
      "connection": "keep-alive",
      "content-length": "294",
      "content-type": "application/json",
      "date": "Wed, 11 Jun 2025 12:38:28 GMT",
      "server": "cloudflare",
      "vary": "Accept-Encoding",
      "x-clerk-auth-message": "Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)",
      "x-clerk-auth-reason": "token-invalid",
      "x-clerk-auth-status": "signed-out"
    },
    "error": {
      "message": "Provider returned error",
      "code": 400,
      "metadata": {
        "raw": "{\"object\":\"error\",\"message\":\"Unexpected role 'tool' after role 'user'\",\"type\":\"invalid_request_error\",\"param\":null,\"code\":null}",
        "provider_name": "Mistral"
      }
    },
    "code": 400,
    "name": "Error",
    "message": "400 Provider returned error",
    "stack": "Error: 400 Provider returned error\n    at APIError.generate (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/node_modules/.pnpm/openai@4.91.1/node_modules/openai/error.mjs:41:20)\n    at OpenAI.makeStatusError (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/node_modules/.pnpm/openai@4.91.1/node_modules/openai/core.mjs:295:25)\n    at OpenAI.makeRequest (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/node_modules/.pnpm/openai@4.91.1/node_modules/openai/core.mjs:339:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async process (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:329:24)\n    at async tryValidateExperiment (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:313:17)\n    at async file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:1211:23\n    at async Promise.all (index 2)\n    at async file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:1209:30\n    at async Promise.all (index 3)"
  },
  "started_at": "2025-06-11T12:38:28.522Z",
  "completed_at": "2025-06-11T12:38:28.760Z",
  "previous": [
    {
      "type": "failure",
      "id": "M0PACtSW1",
      "arguments": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "description": "A unique identifier for the member.",
              "type": "string",
              "format": "uuid",
              "title": "Id",
              "examples": [
                {
                  "description": "Example id",
                  "value": "c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1e"
                },
                {
                  "description": "Another example id",
                  "value": "c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1f"
                }
              ]
            },
            "name": {
              "description": "The name of the member.",
              "title": "Name",
              "type": "string"
            },
            "email": {
              "description": "The email address of the member.",
              "type": "string",
              "format": "email",
              "title": "Email"
            },
            "age": {
              "description": "The age of the member.",
              "type": "integer",
              "minimum": 20,
              "exclusiveMaximum": 100,
              "title": "Age"
            },
            "hobbies": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "A unique identifier for the hobby.",
                    "type": "string",
                    "format": "uuid",
                    "title": "Id"
                  },
                  "name": {
                    "description": "Name of the hobby.",
                    "title": "Name",
                    "type": "string"
                  }
                }
              }
            },
            "created_at": {
              "description": "The date and time when the member was created.",
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "description": "The date and time when the member was last updated.",
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "deleted_at": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "The date and time when the member was deleted.",
                  "type": "string",
                  "format": "date-time",
                  "title": "Deleted At"
                }
              ]
            }
          }
        }
      },
      "result": {
        "success": false,
        "errors": [
          {
            "path": "$input.schema.properties.id.examples",
            "expected": "(Record<string, any> | undefined)",
            "value": [
              {
                "description": "Example id",
                "value": "c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1e"
              },
              {
                "description": "Another example id",
                "value": "c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1f"
              }
            ]
          }
        ],
        "data": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "description": "A unique identifier for the member.",
                "type": "string",
                "format": "uuid",
                "title": "Id",
                "examples": [
                  {
                    "description": "Example id",
                    "value": "c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1e"
                  },
                  {
                    "description": "Another example id",
                    "value": "c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1f"
                  }
                ]
              },
              "name": {
                "description": "The name of the member.",
                "title": "Name",
                "type": "string"
              },
              "email": {
                "description": "The email address of the member.",
                "type": "string",
                "format": "email",
                "title": "Email"
              },
              "age": {
                "description": "The age of the member.",
                "type": "integer",
                "minimum": 20,
                "exclusiveMaximum": 100,
                "title": "Age"
              },
              "hobbies": {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "A unique identifier for the hobby.",
                      "type": "string",
                      "format": "uuid",
                      "title": "Id"
                    },
                    "name": {
                      "description": "Name of the hobby.",
                      "title": "Name",
                      "type": "string"
                    }
                  }
                }
              },
              "created_at": {
                "description": "The date and time when the member was created.",
                "type": "string",
                "format": "date-time",
                "title": "Created At"
              },
              "updated_at": {
                "description": "The date and time when the member was last updated.",
                "type": "string",
                "format": "date-time",
                "title": "Updated At"
              },
              "deleted_at": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "The date and time when the member was deleted.",
                    "type": "string",
                    "format": "date-time",
                    "title": "Deleted At"
                  }
                ]
              }
            }
          }
        }
      },
      "completion": {
        "id": "gen-1749645490-tLN2cNQVmiUDchVzto7Q",
        "provider": "Mistral",
        "model": "mistralai/magistral-medium-2506",
        "object": "chat.completion",
        "created": 1749645490,
        "choices": [
          {
            "logprobs": null,
            "finish_reason": "tool_calls",
            "native_finish_reason": "tool_calls",
            "index": 0,
            "message": {
              "role": "assistant",
              "content": "",
              "refusal": null,
              "reasoning": null,
              "tool_calls": [
                {
                  "id": "M0PACtSW1",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"description\": \"A unique identifier for the member.\", \"type\": \"string\", \"format\": \"uuid\", \"title\": \"Id\", \"examples\": [{\"description\": \"Example id\", \"value\": \"c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1e\"}, {\"description\": \"Another example id\", \"value\": \"c4e1b0e9-e3e9-4b1e-8b1e-8b1e8b1e8b1f\"}]}, \"name\": {\"description\": \"The name of the member.\", \"title\": \"Name\", \"type\": \"string\"}, \"email\": {\"description\": \"The email address of the member.\", \"type\": \"string\", \"format\": \"email\", \"title\": \"Email\"}, \"age\": {\"description\": \"The age of the member.\", \"type\": \"integer\", \"minimum\": 20, \"exclusiveMaximum\": 100, \"title\": \"Age\"}, \"hobbies\": {\"type\": \"array\", \"uniqueItems\": true, \"items\": {\"type\": \"object\", \"properties\": {\"id\": {\"description\": \"A unique identifier for the hobby.\", \"type\": \"string\", \"format\": \"uuid\", \"title\": \"Id\"}, \"name\": {\"description\": \"Name of the hobby.\", \"title\": \"Name\", \"type\": \"string\"}}}}, \"created_at\": {\"description\": \"The date and time when the member was created.\", \"type\": \"string\", \"format\": \"date-time\", \"title\": \"Created At\"}, \"updated_at\": {\"description\": \"The date and time when the member was last updated.\", \"type\": \"string\", \"format\": \"date-time\", \"title\": \"Updated At\"}, \"deleted_at\": {\"oneOf\": [{\"type\": \"null\"}, {\"description\": \"The date and time when the member was deleted.\", \"type\": \"string\", \"format\": \"date-time\", \"title\": \"Deleted At\"}]}}}}"
                  },
                  "index": 0,
                  "type": "function"
                }
              ]
            }
          }
        ],
        "usage": {
          "prompt_tokens": 29078,
          "completion_tokens": 463,
          "total_tokens": 29541
        }
      },
      "started_at": "2025-06-11T12:38:09.647Z",
      "completed_at": "2025-06-11T12:38:28.521Z",
      "previous": []
    }
  ]
}