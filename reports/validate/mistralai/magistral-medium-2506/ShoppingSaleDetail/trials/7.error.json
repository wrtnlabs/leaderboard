{
  "type": "error",
  "error": {
    "status": 400,
    "headers": {
      "access-control-allow-origin": "*",
      "cf-ray": "94e129fc5ad0eb13-MAN",
      "connection": "keep-alive",
      "content-length": "294",
      "content-type": "application/json",
      "date": "Wed, 11 Jun 2025 12:38:10 GMT",
      "server": "cloudflare",
      "vary": "Accept-Encoding",
      "x-clerk-auth-message": "Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)",
      "x-clerk-auth-reason": "token-invalid",
      "x-clerk-auth-status": "signed-out"
    },
    "error": {
      "message": "Provider returned error",
      "code": 400,
      "metadata": {
        "raw": "{\"object\":\"error\",\"message\":\"Unexpected role 'tool' after role 'user'\",\"type\":\"invalid_request_error\",\"param\":null,\"code\":null}",
        "provider_name": "Mistral"
      }
    },
    "code": 400,
    "name": "Error",
    "message": "400 Provider returned error",
    "stack": "Error: 400 Provider returned error\n    at APIError.generate (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/node_modules/.pnpm/openai@4.91.1/node_modules/openai/error.mjs:41:20)\n    at OpenAI.makeStatusError (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/node_modules/.pnpm/openai@4.91.1/node_modules/openai/core.mjs:295:25)\n    at OpenAI.makeRequest (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/node_modules/.pnpm/openai@4.91.1/node_modules/openai/core.mjs:339:30)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async process (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:329:24)\n    at async tryValidateExperiment (file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:313:17)\n    at async file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:1211:23\n    at async Promise.all (index 6)\n    at async file:///Users/ryoppippi/ghq/github.com/wrtnlabs/benchmark/dist/index.mjs:1209:30\n    at async Promise.all (index 10)"
  },
  "started_at": "2025-06-11T12:38:10.604Z",
  "completed_at": "2025-06-11T12:38:10.809Z",
  "previous": []
}