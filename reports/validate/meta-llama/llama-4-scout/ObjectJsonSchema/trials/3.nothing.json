{
  "type": "nothing",
  "completion": {
    "id": "gen-1744013408-uNaqHkgoNFASDf8ZQJUc",
    "provider": "Together",
    "model": "meta-llama/llama-4-scout",
    "object": "chat.completion",
    "created": 1744013408,
    "choices": [
      {
        "logprobs": null,
        "finish_reason": "stop",
        "native_finish_reason": "stop",
        "index": 0,
        "message": {
          "role": "assistant",
          "content": "IMember\" type to JSON schema and collect it for reusing, you can use the `collectSchema` function. Here's how you can define the function call with its proper arguments:\n\n```json\n{\n  \"name\": \"collectSchema\",\n  \"parameters\": {\n    \"schema\": {\n      \"title\": \"IMember\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"format\": \"uuid\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        },\n        \"age\": {\n          \"type\": \"integer\",\n          \"minimum\": 20,\n          \"exclusiveMaximum\": 100\n        },\n        \"hobbies\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\"id\", \"name\"]\n          }\n        },\n        \"created_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"updated_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"deleted_at\": {\n          \"type\": [\"null\", \"string\"],\n          \"format\": \"date-time\"\n        }\n      },\n      \"required\": [\"id\", \"name\", \"email\", \"age\", \"hobbies\", \"created_at\", \"updated_at\", \"deleted_at\"]\n    }\n  }\n}\n```\n\nHowever, OpenAPI has some restrictions and considerations. An example schema definition in JSON format would be:\n\n```json\n{\n  \"name\": \"collectSchema\",\n  \"parameters\": {\n    \"schema\": {\n      \"const\": \"IMember\",\n      \"title\": \"IMember\",\n      \"description\": \"IMember schema\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"description\": \"The member's ID\",\n          \"format\": \"uuid\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The member's name\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"description\": \"The member's email\",\n          \"format\": \"email\"\n        },\n        \"age\": {\n          \"type\": \"integer\",\n          \"description\": \"The member's age\",\n          \"minimum\": 20,\n          \"exclusiveMaximum\": 100\n        },\n        \"hobbies\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\"id\", \"name\"]\n          }\n        },\n        \"created_at\": {\n          \"type\": \"string\",\n          \"description\": \"The member's creation date\",\n          \"format\": \"date-time\"\n        },\n        \"updated_at\": {\n          \"type\": \"string\",\n          \"description\": \"The member's last update date\",\n          \"format\": \"date-time\"\n        },\n        \"deleted_at\": {\n          \"type\": [\"null\", \"string\"],\n          \"description\": \"The member's deletion date\",\n          \"format\": \"date-time\"\n        }\n      },\n      \"required\": [\"id\", \"name\", \"email\", \"age\", \"hobbies\", \"created_at\", \"updated_at\", \"deleted_at\"]\n    }\n  }\n}\n```",
          "refusal": null
        }
      }
    ],
    "usage": {
      "prompt_tokens": 31642,
      "completion_tokens": 796,
      "total_tokens": 32438
    }
  },
  "started_at": "2025-04-07T08:10:05.973Z",
  "completed_at": "2025-04-07T08:10:21.891Z",
  "previous": []
}