{
  "type": "success",
  "id": "call_DDxcSqpLGitJYfcLiu2T76ED",
  "arguments": {
    "schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "A unique identifier for the member."
        },
        "name": {
          "type": "string",
          "description": "The name of the member."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email address of the member."
        },
        "age": {
          "type": "number",
          "minimum": 20,
          "exclusiveMaximum": 100,
          "description": "The age of the member, must be 20 or older and less than 100."
        },
        "hobbies": {
          "type": "array",
          "description": "List of hobbies of the member.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "A unique identifier for the hobby."
              },
              "name": {
                "type": "string",
                "description": "The name of the hobby."
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the member was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the member was last updated."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "description": "Timestamp when the member was deleted (null if not deleted)."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "age",
        "hobbies",
        "created_at",
        "updated_at"
      ],
      "additionalProperties": false,
      "title": "IMember",
      "description": "Schema for a member in the system."
    }
  },
  "result": {
    "success": true,
    "data": {
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "A unique identifier for the member."
          },
          "name": {
            "type": "string",
            "description": "The name of the member."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the member."
          },
          "age": {
            "type": "number",
            "minimum": 20,
            "exclusiveMaximum": 100,
            "description": "The age of the member, must be 20 or older and less than 100."
          },
          "hobbies": {
            "type": "array",
            "description": "List of hobbies of the member.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A unique identifier for the hobby."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the hobby."
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the member was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the member was last updated."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the member was deleted (null if not deleted)."
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "age",
          "hobbies",
          "created_at",
          "updated_at"
        ],
        "additionalProperties": false,
        "title": "IMember",
        "description": "Schema for a member in the system."
      }
    }
  },
  "completion": {
    "id": "gen-1749643827-fTsN8kpFrUoymDqtyeiu",
    "provider": "OpenAI",
    "model": "openai/gpt-4o-mini-2024-07-18",
    "object": "chat.completion",
    "created": 1749643827,
    "choices": [
      {
        "logprobs": null,
        "finish_reason": "tool_calls",
        "native_finish_reason": "tool_calls",
        "index": 0,
        "message": {
          "role": "assistant",
          "content": "",
          "refusal": null,
          "reasoning": null,
          "tool_calls": [
            {
              "index": 0,
              "id": "call_DDxcSqpLGitJYfcLiu2T76ED",
              "type": "function",
              "function": {
                "name": "collectSchema",
                "arguments": "{\"schema\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"A unique identifier for the member.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of the member.\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"The email address of the member.\"},\"age\":{\"type\":\"number\",\"minimum\":20,\"exclusiveMaximum\":100,\"description\":\"The age of the member, must be 20 or older and less than 100.\"},\"hobbies\":{\"type\":\"array\",\"description\":\"List of hobbies of the member.\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\",\"description\":\"A unique identifier for the hobby.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of the hobby.\"}},\"required\":[\"id\",\"name\"]}},\"created_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the member was created.\"},\"updated_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp when the member was last updated.\"},\"deleted_at\":{\"type\":\"string\",\"format\":\"date-time\",\"nullable\":true,\"description\":\"Timestamp when the member was deleted (null if not deleted).\"}},\"required\":[\"id\",\"name\",\"email\",\"age\",\"hobbies\",\"created_at\",\"updated_at\"],\"additionalProperties\":false,\"title\":\"IMember\",\"description\":\"Schema for a member in the system.\"}}"
              }
            }
          ]
        }
      }
    ],
    "system_fingerprint": "fp_34a54ae93c",
    "usage": {
      "prompt_tokens": 53247,
      "completion_tokens": 295,
      "total_tokens": 53542,
      "prompt_tokens_details": {
        "cached_tokens": 52352
      },
      "completion_tokens_details": {
        "reasoning_tokens": 0
      }
    }
  },
  "started_at": "2025-06-11T12:10:27.126Z",
  "completed_at": "2025-06-11T12:10:34.164Z",
  "previous": [
    {
      "type": "failure",
      "id": "call_tl85LdQDCdpDgz9dsAYRGive",
      "arguments": {
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "A unique identifier for the member."
            },
            "name": {
              "type": "string",
              "description": "The name of the member."
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "The email address of the member."
            },
            "age": {
              "type": "number",
              "minimum": 20,
              "exclusiveMaximum": 100,
              "description": "The age of the member, must be 20 or older and less than 100."
            },
            "hobbies": {
              "type": "array",
              "description": "List of hobbies of the member.",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "A unique identifier for the hobby."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the hobby."
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the member was created."
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the member was last updated."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "Timestamp when the member was deleted (null if not deleted)."
            },
            "required": [
              "id",
              "name",
              "email",
              "age",
              "hobbies",
              "created_at",
              "updated_at"
            ],
            "additionalProperties": false,
            "title": "IMember",
            "description": "Schema for a member in the system."
          }
        }
      },
      "result": {
        "success": false,
        "errors": [
          {
            "path": "$input.schema.properties.required",
            "expected": "(OpenApi.IJsonSchema.IArray | OpenApi.IJsonSchema.IBoolean | OpenApi.IJsonSchema.IConstant | OpenApi.IJsonSchema.IInteger | OpenApi.IJsonSchema.INull | OpenApi.IJsonSchema.INumber | OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IOneOf | OpenApi.IJsonSchema.IReference<string> | OpenApi.IJsonSchema.IString | OpenApi.IJsonSchema.ITuple | OpenApi.IJsonSchema.IUnknown)",
            "value": [
              "id",
              "name",
              "email",
              "age",
              "hobbies",
              "created_at",
              "updated_at"
            ]
          },
          {
            "path": "$input.schema.properties.additionalProperties",
            "expected": "(OpenApi.IJsonSchema.IArray | OpenApi.IJsonSchema.IBoolean | OpenApi.IJsonSchema.IConstant | OpenApi.IJsonSchema.IInteger | OpenApi.IJsonSchema.INull | OpenApi.IJsonSchema.INumber | OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IOneOf | OpenApi.IJsonSchema.IReference<string> | OpenApi.IJsonSchema.IString | OpenApi.IJsonSchema.ITuple | OpenApi.IJsonSchema.IUnknown)",
            "value": false
          },
          {
            "path": "$input.schema.properties.title",
            "expected": "(OpenApi.IJsonSchema.IArray | OpenApi.IJsonSchema.IBoolean | OpenApi.IJsonSchema.IConstant | OpenApi.IJsonSchema.IInteger | OpenApi.IJsonSchema.INull | OpenApi.IJsonSchema.INumber | OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IOneOf | OpenApi.IJsonSchema.IReference<string> | OpenApi.IJsonSchema.IString | OpenApi.IJsonSchema.ITuple | OpenApi.IJsonSchema.IUnknown)",
            "value": "IMember"
          },
          {
            "path": "$input.schema.properties.description",
            "expected": "(OpenApi.IJsonSchema.IArray | OpenApi.IJsonSchema.IBoolean | OpenApi.IJsonSchema.IConstant | OpenApi.IJsonSchema.IInteger | OpenApi.IJsonSchema.INull | OpenApi.IJsonSchema.INumber | OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IOneOf | OpenApi.IJsonSchema.IReference<string> | OpenApi.IJsonSchema.IString | OpenApi.IJsonSchema.ITuple | OpenApi.IJsonSchema.IUnknown)",
            "value": "Schema for a member in the system."
          }
        ],
        "data": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "A unique identifier for the member."
              },
              "name": {
                "type": "string",
                "description": "The name of the member."
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "The email address of the member."
              },
              "age": {
                "type": "number",
                "minimum": 20,
                "exclusiveMaximum": 100,
                "description": "The age of the member, must be 20 or older and less than 100."
              },
              "hobbies": {
                "type": "array",
                "description": "List of hobbies of the member.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "A unique identifier for the hobby."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the hobby."
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the member was created."
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the member was last updated."
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "Timestamp when the member was deleted (null if not deleted)."
              },
              "required": [
                "id",
                "name",
                "email",
                "age",
                "hobbies",
                "created_at",
                "updated_at"
              ],
              "additionalProperties": false,
              "title": "IMember",
              "description": "Schema for a member in the system."
            }
          }
        }
      },
      "completion": {
        "id": "gen-1749643800-ayZQT7JfyYDxEQxfea9G",
        "provider": "OpenAI",
        "model": "openai/gpt-4o-mini-2024-07-18",
        "object": "chat.completion",
        "created": 1749643800,
        "choices": [
          {
            "logprobs": null,
            "finish_reason": "tool_calls",
            "native_finish_reason": "tool_calls",
            "index": 0,
            "message": {
              "role": "assistant",
              "content": "",
              "refusal": null,
              "reasoning": null,
              "tool_calls": [
                {
                  "index": 0,
                  "id": "call_tl85LdQDCdpDgz9dsAYRGive",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"format\": \"uuid\", \"description\": \"A unique identifier for the member.\"}, \"name\": {\"type\": \"string\", \"description\": \"The name of the member.\"}, \"email\": {\"type\": \"string\", \"format\": \"email\", \"description\": \"The email address of the member.\"}, \"age\": {\"type\": \"number\", \"minimum\": 20, \"exclusiveMaximum\": 100, \"description\": \"The age of the member, must be 20 or older and less than 100.\"}, \"hobbies\": {\"type\": \"array\", \"description\": \"List of hobbies of the member.\", \"items\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"format\": \"uuid\", \"description\": \"A unique identifier for the hobby.\"}, \"name\": {\"type\": \"string\", \"description\": \"The name of the hobby.\"}}, \"required\": [\"id\", \"name\"]}}, \"created_at\": {\"type\": \"string\", \"format\": \"date-time\", \"description\": \"Timestamp when the member was created.\"}, \"updated_at\": {\"type\": \"string\", \"format\": \"date-time\", \"description\": \"Timestamp when the member was last updated.\"}, \"deleted_at\": {\"type\": \"string\", \"format\": \"date-time\", \"nullable\": true, \"description\": \"Timestamp when the member was deleted (null if not deleted).\"}, \"required\": [\"id\", \"name\", \"email\", \"age\", \"hobbies\", \"created_at\", \"updated_at\"], \"additionalProperties\": false, \"title\": \"IMember\", \"description\": \"Schema for a member in the system.\"}}}"
                  }
                },
                {
                  "index": 1,
                  "id": "call_IM7C6jiqVUFyq5cJBpBtpdyD",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"string\", \"format\": \"uuid\", \"description\": \"A unique identifier.\"}}"
                  }
                },
                {
                  "index": 2,
                  "id": "call_2k6i2hQKkGEqzkLtWwuY3Pq1",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"string\", \"format\": \"email\", \"description\": \"Valid email format.\"}}"
                  }
                },
                {
                  "index": 3,
                  "id": "call_88xJRof2MqHuAwW37zVdUEkr",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"number\", \"minimum\": 20, \"exclusiveMaximum\": 100, \"description\": \"Age must be 20 or older and less than 100.\"}}"
                  }
                },
                {
                  "index": 4,
                  "id": "call_dOF4K86EoYgDAygGhsJuJxZm",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"format\": \"uuid\", \"description\": \"A unique identifier for the hobby.\"}, \"name\": {\"type\": \"string\", \"description\": \"The name of the hobby.\"}}, \"required\": [\"id\", \"name\"], \"title\": \"Hobby\"}}"
                  }
                },
                {
                  "index": 5,
                  "id": "call_MWsYf9mqhN1iQ1fbcrjgcYOm",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"string\", \"format\": \"date-time\", \"description\": \"Valid date-time format.\"}}"
                  }
                },
                {
                  "index": 6,
                  "id": "call_gXb91Rv8dWArgoLBk9lj8KqL",
                  "type": "function",
                  "function": {
                    "name": "collectSchema",
                    "arguments": "{\"schema\": {\"type\": \"null\", \"description\": \"A null type.\"}}"
                  }
                }
              ]
            }
          }
        ],
        "system_fingerprint": "fp_34a54ae93c",
        "usage": {
          "prompt_tokens": 52434,
          "completion_tokens": 526,
          "total_tokens": 52960,
          "prompt_tokens_details": {
            "cached_tokens": 7808
          },
          "completion_tokens_details": {
            "reasoning_tokens": 0
          }
        }
      },
      "started_at": "2025-06-11T12:09:59.749Z",
      "completed_at": "2025-06-11T12:10:27.126Z",
      "previous": []
    }
  ]
}