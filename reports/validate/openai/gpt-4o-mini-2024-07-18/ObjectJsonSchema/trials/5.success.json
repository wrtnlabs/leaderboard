{
  "type": "success",
  "id": "call_2qT6aa83tDhiEW3VzeMSqEbT",
  "arguments": {
    "schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "title": "ID of the member",
          "description": "A unique identifier for the member."
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the member."
        },
        "email": {
          "type": "string",
          "format": "email",
          "title": "Email",
          "description": "Email address of the member."
        },
        "age": {
          "type": "number",
          "minimum": 20,
          "exclusiveMaximum": 100,
          "title": "Age",
          "description": "Age of the member, must be 20 or older and less than 100."
        },
        "hobbies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Hobby ID",
                "description": "A unique identifier for the hobby."
              },
              "name": {
                "type": "string",
                "title": "Hobby Name",
                "description": "The name of the hobby."
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "title": "Hobbies",
          "description": "A list of hobbies related to the member."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "description": "Timestamp when the member was created."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "description": "Timestamp when the member was last updated."
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "title": "Deleted At",
          "description": "Timestamp when the member was deleted, if applicable."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "age",
        "hobbies",
        "created_at",
        "updated_at"
      ]
    }
  },
  "result": {
    "success": true,
    "data": {
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the member",
            "description": "A unique identifier for the member."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the member."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email address of the member."
          },
          "age": {
            "type": "number",
            "minimum": 20,
            "exclusiveMaximum": 100,
            "title": "Age",
            "description": "Age of the member, must be 20 or older and less than 100."
          },
          "hobbies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Hobby ID",
                  "description": "A unique identifier for the hobby."
                },
                "name": {
                  "type": "string",
                  "title": "Hobby Name",
                  "description": "The name of the hobby."
                }
              },
              "required": [
                "id",
                "name"
              ]
            },
            "title": "Hobbies",
            "description": "A list of hobbies related to the member."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp when the member was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Timestamp when the member was last updated."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Deleted At",
            "description": "Timestamp when the member was deleted, if applicable."
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "age",
          "hobbies",
          "created_at",
          "updated_at"
        ]
      }
    }
  },
  "completion": {
    "id": "gen-1744174509-1XfE8RUp27keP1EaA6iS",
    "provider": "OpenAI",
    "model": "openai/gpt-4o-mini-2024-07-18",
    "object": "chat.completion",
    "created": 1744174509,
    "choices": [
      {
        "logprobs": null,
        "finish_reason": "tool_calls",
        "native_finish_reason": "tool_calls",
        "index": 0,
        "message": {
          "role": "assistant",
          "content": "",
          "refusal": null,
          "reasoning": null,
          "tool_calls": [
            {
              "index": 0,
              "id": "call_2qT6aa83tDhiEW3VzeMSqEbT",
              "type": "function",
              "function": {
                "name": "collectSchema",
                "arguments": "{\"schema\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"format\": \"uuid\", \"title\": \"ID of the member\", \"description\": \"A unique identifier for the member.\"}, \"name\": {\"type\": \"string\", \"title\": \"Name\", \"description\": \"The name of the member.\"}, \"email\": {\"type\": \"string\", \"format\": \"email\", \"title\": \"Email\", \"description\": \"Email address of the member.\"}, \"age\": {\"type\": \"number\", \"minimum\": 20, \"exclusiveMaximum\": 100, \"title\": \"Age\", \"description\": \"Age of the member, must be 20 or older and less than 100.\"}, \"hobbies\": {\"type\": \"array\", \"items\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"format\": \"uuid\", \"title\": \"Hobby ID\", \"description\": \"A unique identifier for the hobby.\"}, \"name\": {\"type\": \"string\", \"title\": \"Hobby Name\", \"description\": \"The name of the hobby.\"}}, \"required\": [\"id\", \"name\"]}, \"title\": \"Hobbies\", \"description\": \"A list of hobbies related to the member.\"}, \"created_at\": {\"type\": \"string\", \"format\": \"date-time\", \"title\": \"Created At\", \"description\": \"Timestamp when the member was created.\"}, \"updated_at\": {\"type\": \"string\", \"format\": \"date-time\", \"title\": \"Updated At\", \"description\": \"Timestamp when the member was last updated.\"}, \"deleted_at\": {\"type\": \"string\", \"format\": \"date-time\", \"nullable\": true, \"title\": \"Deleted At\", \"description\": \"Timestamp when the member was deleted, if applicable.\"}}, \"required\": [\"id\", \"name\", \"email\", \"age\", \"hobbies\", \"created_at\", \"updated_at\"]}}"
              }
            },
            {
              "index": 1,
              "id": "call_TJqtiS8OpGPKgf5xQhGFCAYc",
              "type": "function",
              "function": {
                "name": "collectSchema",
                "arguments": "{\"schema\": {\"type\": \"string\", \"title\": \"UUID\", \"description\": \"A universally unique identifier (UUID).\", \"format\": \"uuid\"}}"
              }
            }
          ]
        }
      }
    ],
    "system_fingerprint": "fp_44added55e",
    "usage": {
      "prompt_tokens": 52434,
      "completion_tokens": 376,
      "total_tokens": 52810,
      "prompt_tokens_details": {
        "cached_tokens": 9856
      },
      "completion_tokens_details": {
        "reasoning_tokens": 0
      }
    }
  },
  "started_at": "2025-04-09T04:55:09.638Z",
  "completed_at": "2025-04-09T04:55:23.477Z",
  "previous": []
}