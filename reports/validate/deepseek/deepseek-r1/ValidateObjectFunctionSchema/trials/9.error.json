{
  "type": "error",
  "error": {
    "status": 500,
    "headers": {
      "access-control-allow-origin": "*",
      "cf-ray": "92a98ed4fe91b325-MAN",
      "connection": "keep-alive",
      "content-length": "21",
      "content-type": "text/plain; charset=UTF-8",
      "date": "Thu, 03 Apr 2025 15:21:49 GMT",
      "server": "cloudflare",
      "vary": "Accept-Encoding",
      "x-clerk-auth-message": "Invalid JWT form. A JWT consists of three parts separated by dots. (reason=token-invalid, token-carrier=header)",
      "x-clerk-auth-reason": "token-invalid",
      "x-clerk-auth-status": "signed-out"
    }
  },
  "started_at": "2025-04-03T15:21:48.006Z",
  "completed_at": "2025-04-03T15:21:49.708Z",
  "previous": [
    {
      "type": "failure",
      "id": "call_ru5x581ip76414yagbeo0w63",
      "arguments": {
        "schema": {
          "name": "drawCircle",
          "description": "Draw a circle with the given center and radius.",
          "parameters": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "circle"
                ],
                "description": "Type of shape to draw"
              },
              "center": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "X coordinate of center"
                  },
                  "y": {
                    "type": "number",
                    "description": "Y coordinate of center"
                  }
                },
                "required": [
                  "x",
                  "y"
                ]
              },
              "radius": {
                "type": "number",
                "description": "Radius of the circle. @minimum 0"
              }
            },
            "required": [
              "type",
              "center",
              "radius"
            ]
          },
          "output": {
            "type": "null"
          }
        }
      },
      "result": {
        "success": false,
        "errors": [
          {
            "path": "$input.schema.parameters.$defs",
            "expected": "Record<string, IChatGptSchema>"
          },
          {
            "path": "$input.schema.parameters.additionalProperties",
            "expected": "false"
          }
        ],
        "data": {
          "schema": {
            "name": "drawCircle",
            "description": "Draw a circle with the given center and radius.",
            "parameters": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "circle"
                  ],
                  "description": "Type of shape to draw"
                },
                "center": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number",
                      "description": "X coordinate of center"
                    },
                    "y": {
                      "type": "number",
                      "description": "Y coordinate of center"
                    }
                  },
                  "required": [
                    "x",
                    "y"
                  ]
                },
                "radius": {
                  "type": "number",
                  "description": "Radius of the circle. @minimum 0"
                }
              },
              "required": [
                "type",
                "center",
                "radius"
              ]
            },
            "output": {
              "type": "null"
            }
          }
        }
      },
      "completion": {
        "id": "gen-1743693612-mAAtE2vDjI8f5JwfSVmm",
        "provider": "Novita",
        "model": "deepseek/deepseek-r1",
        "object": "chat.completion",
        "created": 1743693612,
        "choices": [
          {
            "logprobs": null,
            "finish_reason": "tool_calls",
            "native_finish_reason": "tool_calls",
            "index": 0,
            "message": {
              "role": "assistant",
              "content": "",
              "refusal": null,
              "reasoning": "Okay, I need to convert the given TypeScript function into a schema that can be enrolled using the enrollFunction tool. Let me start by understanding the function and its parameters.\n\nThe function is called drawCircle, and it takes a props object with three properties: type, center, and radius. The type is a string literal \"circle\", center is an object with x and y numbers, and radius is a number that must be at least 0. The function returns void.\n\nFirst, I need to map this structure into the IChatGptSchema format. The schema should define each parameter as per the provided example. The parameters are part of an object, so the root schema will be of type object with properties.\n\nFor the 'type' property, it's an enum with only \"circle\" as an option. So in the schema, that's a string enum. The center is another object with x and y, both numbers. The radius is a number, but with a minimum of 0. However, the schema doesn't support minimum directly, so I should add a description note like \"@minimum 0\".\n\nNext, I need to ensure all required fields are marked. All three properties (type, center, radius) are required. The center's x and y are also required.\n\nI should also check for any nested structures. The center is a nested object, which needs its own schema definition. But since it's inline, maybe it can be defined within the properties without a $ref.\n\nWait, looking at the parameters example, the schema uses $defs for named types. But in this case, the center is an anonymous object. Since the schema might not allow anonymous objects, perhaps I need to define it as a nested object with its own properties.\n\nAlso, the radius has a constraint (minimum 0), which in the schema is handled by adding a description. So I'll add \"description\": \"Radius of the circle. @minimum 0\" for the radius.\n\nPutting it all together, the schema should have an object type with properties for type, center, and radius. Each property has its type defined, and required fields are listed. The radius's description includes the minimum constraint.\n\nI should also make sure that the schema's parameters are correctly structured under the parameters property in the enrollFunction call. The function's name is drawCircle, and the description is taken from the JSDoc.\n\nFinally, the output is void, so the output schema can be omitted or set to null. But looking at the enrollFunction parameters, the schema includes output as part of the function schema. Since the function returns void, the output can be a null type.\n\nWait, checking the enrollFunction parameters, the schema expects an output property. In the example, the output is part of the function schema. For a void return, maybe the output is a schema with type \"null\". Let me check the IChatGptSchema definitions.\n\nLooking back, the IChatGptSchema includes a INull type with type \"null\". So for the output, I can set it to { type: \"null\" }.\n\nSo the final schema for the function should include the parameters as an object with the three properties and the output as a null type.\n\nDouble-checking all required fields and nested structures. The center is an object with x and y, both numbers, required. The radius is a number with a minimum 0 note in the description. The type is fixed to \"circle\".\n\nI think that's all. Now, structuring this into the enrollFunction call with the correct JSON schema.\n",
              "tool_calls": [
                {
                  "index": 0,
                  "id": "call_ru5x581ip76414yagbeo0w63",
                  "type": "function",
                  "function": {
                    "name": "enrollFunction",
                    "arguments": "{\n  \"schema\": {\n    \"name\": \"drawCircle\",\n    \"description\": \"Draw a circle with the given center and radius.\",\n    \"parameters\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"circle\"],\n          \"description\": \"Type of shape to draw\"\n        },\n        \"center\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"x\": { \"type\": \"number\", \"description\": \"X coordinate of center\" },\n            \"y\": { \"type\": \"number\", \"description\": \"Y coordinate of center\" }\n          },\n          \"required\": [\"x\", \"y\"]\n        },\n        \"radius\": {\n          \"type\": \"number\",\n          \"description\": \"Radius of the circle. @minimum 0\"\n        }\n      },\n      \"required\": [\"type\", \"center\", \"radius\"]\n    },\n    \"output\": {\n      \"type\": \"null\"\n    }\n  }\n}"
                  }
                }
              ]
            }
          }
        ],
        "system_fingerprint": "",
        "usage": {
          "prompt_tokens": 48036,
          "completion_tokens": 980,
          "total_tokens": 49016,
          "prompt_tokens_details": {
            "cached_tokens": 0
          },
          "completion_tokens_details": {
            "reasoning_tokens": 729
          }
        }
      },
      "started_at": "2025-04-03T15:20:11.862Z",
      "completed_at": "2025-04-03T15:21:48.005Z",
      "previous": []
    }
  ]
}